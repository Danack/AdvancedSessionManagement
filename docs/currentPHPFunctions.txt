function session_name ($name = null) {}
function session_module_name ($module = null) {}
function session_save_path ($path = null) {}
function session_id ($id = null) {}
function session_regenerate_id ($delete_old_session = false) {}
function session_register_shutdown  () {}
function session_decode ($data) {}
function session_register ($name, $_ = null) {}
function session_unregister ($name) {}
function session_is_registered ($name) {}
function session_encode () {}
function session_start () {}
function session_destroy () {}
function session_unset () {}
function session_set_save_handler ($open, $close, $read, $write, $destroy, $gc) {}
function session_cache_limiter ($cache_limiter = null) {}



function session_cache_expire ($new_cache_expire = null) {}
function session_set_cookie_params ($lifetime, $path = null, $domain = null, $secure = false, $httponly = false) {}
function session_get_cookie_params () {}
function session_write_close () {}

/*
 * @return int <b>PHP_SESSION_DISABLED</b> if sessions are disabled.
 * <b>PHP_SESSION_NONE</b> if sessions are enabled, but none exists.
 * <b>PHP_SESSION_ACTIVE</b> if sessions are enabled, and one exists.
 */
function session_status () {}




//Cache limiter - wtf is this?
//http://www.php.net/manual/en/function.session-cache-limiter.php
 If <i>cache_limiter</i> is specified, the name of the
 * current cache limiter is changed to the new value.
 * </p>
 * <table>
 * Possible values
 * <tr valign="top">
 * <td>Value</td>
 * <td>Headers sent</td>
 * </tr>
 * <tr valign="top">
 * <td>public</td>
 * <td>
 * <pre>
 * Expires: (sometime in the future, according session.cache_expire)
 * Cache-Control: public, max-age=(sometime in the future, according to session.cache_expire)
 * Last-Modified: (the timestamp of when the session was last saved)
 * </pre>
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>private_no_expire</td>
 * <td>
 * <pre>
 * Cache-Control: private, max-age=(session.cache_expire in the future), pre-check=(session.cache_expire in the future)
 * Last-Modified: (the timestamp of when the session was last saved)
 * </pre>
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>private</td>
 * <td>
 * <pre>
 * Expires: Thu, 19 Nov 1981 08:52:00 GMT
 * Cache-Control: private, max-age=(session.cache_expire in the future), pre-check=(session.cache_expire in the future)
 * Last-Modified: (the timestamp of when the session was last saved)
 * </pre>
 * </td>
 * </tr>
 * <tr valign="top">
 * <td>nocache</td>
 * <td>
 * <pre>
 * Expires: Thu, 19 Nov 1981 08:52:00 GMT
 * Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0
 * Pragma: no-cache
 * </pre>
 * </td>